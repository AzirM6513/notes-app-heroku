{"version":3,"sources":["components/Note.js","components/Footer.js","services/notes.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","Footer","style","color","fontStyle","fontSize","baseUrl","axios","get","then","response","data","newObject","post","id","put","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","setErrorMessage","useEffect","noteService","initialNotes","notesToShow","filter","map","find","n","changedNote","returnedNote","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","date","Date","toISOString","Math","random","concat","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"gLAaeA,EAXF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBACdC,EAAQF,EAAKG,UAAY,qBAAuB,iBAEtD,OACE,qBAAIC,UAAU,OAAd,UACGJ,EAAKK,QACN,wBAAQC,QAASL,EAAjB,SAAoCC,QCW3BK,EAjBA,WAOb,OACE,sBAAKC,MAPa,CAClBC,MAAO,QACPC,UAAW,SACXC,SAAU,IAIV,UACE,uBACA,2G,gBCXAC,EAAU,aAiBD,EAfA,WAEb,OADgBC,IAAMC,IAAIF,GACXG,MAAK,SAACC,GAAD,OAAcA,EAASC,SAa9B,EAVA,SAACC,GAEd,OADgBL,IAAMM,KAAKP,EAASM,GACrBH,MAAK,SAACC,GAAD,OAAcA,EAASC,SAQ9B,EALA,SAACG,EAAIF,GAElB,OADgBL,IAAMQ,IAAN,UAAaT,EAAb,YAAwBQ,GAAMF,GAC/BH,MAAK,SAACC,GAAD,OAAcA,EAASC,SC6D9BK,EAtEH,WAAO,IAAD,EACUC,mBAAS,IADnB,mBACTC,EADS,KACFC,EADE,OAEcF,mBAAS,IAFvB,mBAETG,EAFS,KAEAC,EAFA,OAGcJ,oBAAS,GAHvB,mBAGTK,EAHS,KAGAC,EAHA,OAIwBN,mBAAS,MAJjC,mBAIKO,GAJL,WAMhBC,qBAAU,WACRC,IAAqBjB,MAAK,SAACkB,GACzBR,EAASQ,QAEV,IAEH,IA8BMC,EAAcN,EAAUJ,EAAQA,EAAMW,QAAO,SAACnC,GAAD,OAAUA,EAAKG,aAElE,OACE,gCACE,uCACA,8BACE,yBAAQG,QAAS,kBAAMuB,GAAYD,IAAnC,kBACQA,EAAU,YAAc,WAGlC,6BACGM,EAAYE,KAAI,SAACpC,GAAD,OACf,cAAC,EAAD,CAEEA,KAAMA,EACNC,iBAAkB,kBA/BD,SAACmB,GAC1B,IAAMpB,EAAOwB,EAAMa,MAAK,SAACC,GAAD,OAAOA,EAAElB,KAAOA,KAClCmB,EAAW,2BAAQvC,GAAR,IAAcG,WAAYH,EAAKG,YAEhD6B,EAAmBZ,EAAImB,GAAaxB,MAAK,SAACyB,GACxCf,EAASD,EAAMY,KAAI,SAACpC,GAAD,OAAWA,EAAKoB,KAAOA,EAAKpB,EAAOwC,MACtDC,YAAW,WACTX,EAAgB,QACf,QAuB2BY,CAAmB1C,EAAKoB,MAF3CpB,EAAKoB,SAMhB,uBAAMuB,SAjDM,SAACC,GACfA,EAAMC,iBACN,IAAMC,EAAa,CACjBzC,QAASqB,EACTqB,MAAM,IAAIC,MAAOC,cACjB9C,UAAW+C,KAAKC,SAAW,IAG7BnB,EAAmBc,GAAY/B,MAAK,SAACyB,GACnCf,EAASD,EAAM4B,OAAOZ,IACtBb,EAAW,QAuCX,UACE,uBAAO0B,MAAO3B,EAAS4B,SAxBJ,SAACV,GACxBjB,EAAWiB,EAAMW,OAAOF,UAwBpB,wBAAQG,KAAK,SAAb,qBAEF,cAAC,EAAD,Q,MCnENC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.0806e2ed.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Note = ({ note, toggleImportance }) => {\n  const label = note.important ? \"make not important\" : \"make important\";\n\n  return (\n    <li className=\"note\">\n      {note.content}\n      <button onClick={toggleImportance}>{label}</button>\n    </li>\n  );\n};\n\nexport default Note;\n","import React from \"react\";\n\nconst Footer = () => {\n  const footerStyle = {\n    color: \"green\",\n    fontStyle: \"italic\",\n    fontSize: 16,\n  };\n\n  return (\n    <div style={footerStyle}>\n      <br />\n      <em>\n        Note app, Department of Computer Science, University of Helsinki 2021\n      </em>\n    </div>\n  );\n};\n\nexport default Footer;\n","import axios from \"axios\";\nconst baseUrl = \"/api/notes\";\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then((response) => response.data);\n};\n\nconst create = (newObject) => {\n  const request = axios.post(baseUrl, newObject);\n  return request.then((response) => response.data);\n};\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\n  return request.then((response) => response.data);\n};\n\nexport default {\n  getAll,\n  create,\n  update,\n};\n","import React, { useState, useEffect } from \"react\";\nimport Note from \"./components/Note\";\nimport Notification from \"./components/Notification\";\nimport Footer from \"./components/Footer\";\nimport noteService from \"./services/notes\";\n\nconst App = () => {\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState(\"\");\n  const [showAll, setShowAll] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  useEffect(() => {\n    noteService.getAll().then((initialNotes) => {\n      setNotes(initialNotes);\n    });\n  }, []);\n\n  const addNote = (event) => {\n    event.preventDefault();\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() > 0.5,\n    };\n\n    noteService.create(noteObject).then((returnedNote) => {\n      setNotes(notes.concat(returnedNote));\n      setNewNote(\"\");\n    });\n  };\n\n  const toggleImportanceOf = (id) => {\n    const note = notes.find((n) => n.id === id);\n    const changedNote = { ...note, important: !note.important };\n\n    noteService.update(id, changedNote).then((returnedNote) => {\n      setNotes(notes.map((note) => (note.id !== id ? note : returnedNote)));\n      setTimeout(() => {\n        setErrorMessage(null);\n      }, 5000);\n    });\n  };\n\n  const handleNoteChange = (event) => {\n    setNewNote(event.target.value);\n  };\n\n  const notesToShow = showAll ? notes : notes.filter((note) => note.important);\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? \"important\" : \"all\"}\n        </button>\n      </div>\n      <ul>\n        {notesToShow.map((note) => (\n          <Note\n            key={note.id}\n            note={note}\n            toggleImportance={() => toggleImportanceOf(note.id)}\n          />\n        ))}\n      </ul>\n      <form onSubmit={addNote}>\n        <input value={newNote} onChange={handleNoteChange} />\n        <button type=\"submit\">save</button>\n      </form>\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport App from \"./App.js\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}